[VARIABLE TYPES]

returning function true or false : i1
bool : i8 : align 1
int : i32 : align 4
long : i64 : align 8
float : float : align 4
double : double : align 8


[OPERATOR]

+ : add nsw
- : sub nsw
* : mul nsw
/ : sdiv
% : srem

[COMPARAISON]
== : eq
!= : ne
< : slt
<= : sle
> : sgt
>= : sge

[COMPARAISON NOUVELLE]
== : oq
!= : une
< : olt
<= : ole
> : ogt
>= oge

[DEFINE FUNCTION]
define i32 @main() #0 {
  %1 = alloca i32, align 4 //vide
  %2 = alloca i32, align 4 //alloue la memoire de l'int a
  %3 = alloca i32, align 4 //aloue la memoire de l'int b
  store i32 0, i32* %1, align 4 //stock 0
  store i32 1, i32* %2, align 4 //stock 1 dans l'int a
  store i32 2, i32* %3, align 4 //stock 2 dans l'int b
  %4 = load i32, i32* %2, align 4 //charge l'int a
  %5 = load i32, i32* %3, align 4 //charge l'int b
  %6 = add nsw i32 %4, %5 //lance la fonction "add" avec %4 et %5 qui sera stock√© sur %6
       sub nsw
       mul nsw
       sdiv (pour le /)
       srem (pour le %)
  store i32 %6, i32* %2, align 4 //sauvegarde %6 sur la valeur %2
  %7 = load i32, i32* %2, align 4 //charge la valeur %2 sur %2
  ret i32 %7 //return %7
}

[IF WITH A DOUBLE]
define i32 @main() #0 {
  %2 = alloca i8, align 1
  store i8 1, i8* %2, align 1
  %3 = load i8, i8* %2, align 1
//convert i8 into a i1
  %4 = trunc i8 %3 to i1
//convert i1 into an i32
  %5 = zext i1 %4 to i32
//compare i32 with an it
  %6 = icmp eq i32 %5, 0
//compare le %6, si valide go to %7, si incorrect go to %8
  br i1 %6, label %7, label %8

7:                                                ; preds = %0
  store i8 1, i8* %2, align 1
  br label %8

8:                                                ; preds = %7, %0
  ret i32 0
}

[GLOBALE VARIABLE]

@toto = dso_local global i32 96, align 4

define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  store i32 5, i32* @toto, align 4
  %2 = load i32, i32* @toto, align 4
  ret i32 %2
}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 12.0.1 (Fedora 12.0.1-1.fc34)"}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.mustprogress"}

===========================[ KALEIDOSCOPE ]==========================

double + double : 

fadd double %5, %6